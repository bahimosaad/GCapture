/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdminFrame.java
 *
 * Created on Sep 23, 2010, 12:10:46 PM
 */
package com.indexing.admin.view;

import com.jidesoft.swing.JideSwingUtilities;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.LayoutManager;
import java.awt.Toolkit;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author ehab
 */
public class AdminFrame extends javax.swing.JFrame {

    /** Creates new form AdminFrame */
    public AdminFrame() {
        preInitComponents();
        initComponents();
        postInitComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testBTN = new javax.swing.JButton();
        actionsPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        addFieldBTN = new javax.swing.JButton();
        updateFieldBTN = new javax.swing.JButton();
        deleteFieldBTN = new javax.swing.JButton();
        workingPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        testBTN.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Indexing Admin");

        actionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Action"));

        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        addFieldBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add2.JPG"))); // NOI18N
        addFieldBTN.setText("Add Filed");
        addFieldBTN.setFocusable(false);
        addFieldBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addFieldBTN.setPreferredSize(new java.awt.Dimension(30, 30));
        addFieldBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addFieldBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFieldBTNActionPerformed(evt);
            }
        });
        jToolBar1.add(addFieldBTN);

        updateFieldBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit2.JPG"))); // NOI18N
        updateFieldBTN.setText("Update Filed");
        updateFieldBTN.setFocusable(false);
        updateFieldBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateFieldBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateFieldBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFieldBTNActionPerformed(evt);
            }
        });
        jToolBar1.add(updateFieldBTN);

        deleteFieldBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete2.JPG"))); // NOI18N
        deleteFieldBTN.setText("Delete Filed");
        deleteFieldBTN.setFocusable(false);
        deleteFieldBTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteFieldBTN.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteFieldBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFieldBTNActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteFieldBTN);

        javax.swing.GroupLayout actionsPanelLayout = new javax.swing.GroupLayout(actionsPanel);
        actionsPanel.setLayout(actionsPanelLayout);
        actionsPanelLayout.setHorizontalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        );
        actionsPanelLayout.setVerticalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsPanelLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                .addContainerGap())
        );

        workingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("..."));
        workingPanel.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        fileMenu.setText("File");

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(actionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(workingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void preInitComponents(){
         try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            getContentPane().setBackground(new Color(236,233,216));

        } catch (Exception e1) {
            e1.printStackTrace();
        }
    }

    private void postInitComponents() {
        bundle = ResourceBundle.getBundle("com/gdit/bundle/capture", systemLocal);
        setTexts();
        changePanelsDirections();
        centerWindow(this);
    }

    private void setTexts() {
        fileMenu.setText(bundle.getString("index.menu.file"));
        exitMenuItem.setText(bundle.getString("index.exit"));
        helpMenu.setText(bundle.getString("index.menu.help"));
        aboutMenuItem.setText(bundle.getString("index.about"));
        addFieldBTN.setText(bundle.getString("index.admin.add.field"));
        updateFieldBTN.setText(bundle.getString("index.admin.update.field"));
        deleteFieldBTN.setText(bundle.getString("index.admin.delete.field"));
        actionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("index.admin.action")));
    }

    private void changePanelsDirections() {
        changeDirection(this);
        changeDirection(actionsPanel);
        changeDirection(workingPanel);

    }

    private void changeDirection(Component component) {
        boolean orientation = component.getComponentOrientation().isLeftToRight();
        boolean isEn = new Locale("en").equals(systemLocal);
        if (orientation != isEn) {
            JideSwingUtilities.setLocaleRecursively(component, systemLocal);
            JideSwingUtilities.toggleRTLnLTR(component);
            JideSwingUtilities.invalidateRecursively(component);
            SwingUtilities.updateComponentTreeUI(component);

        }
        if (component instanceof JPanel) {
            JPanel panel = (JPanel) component;
            LayoutManager layout = panel.getLayout();
            if (layout instanceof FlowLayout) {
                if (isEn && ((FlowLayout) layout).getAlignment() != FlowLayout.CENTER) {
                    ((FlowLayout) layout).setAlignment(FlowLayout.LEFT);
                } else {
                    ((FlowLayout) layout).setAlignment(FlowLayout.RIGHT);
                }
            } else if (layout instanceof GridBagLayout) {
            }
        }
    }
    public static void centerWindow(final Component target) {
       if (target != null) {
           Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
           Dimension dialogSize = target.getSize();

           if (dialogSize.height > screenSize.height) {
               dialogSize.height = screenSize.height;
           }
           if (dialogSize.width > screenSize.width) {
               dialogSize.width = screenSize.width;
           }

           target.setLocation((screenSize.width - dialogSize.width) / 2,
                   (screenSize.height - dialogSize.height) / 2);
       }
   }

    private void addFieldBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFieldBTNActionPerformed
        workingPanel.removeAll();
        workingPanel.add(new AddFieldPanel());
        workingPanel.revalidate();

    }//GEN-LAST:event_addFieldBTNActionPerformed

    private void updateFieldBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFieldBTNActionPerformed
        workingPanel.removeAll();
        workingPanel.add(new EditFieldPanel());
        workingPanel.revalidate();
    }//GEN-LAST:event_updateFieldBTNActionPerformed

    private void deleteFieldBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFieldBTNActionPerformed
        workingPanel.removeAll();
        workingPanel.add(new DeleteFieldPanel());
        workingPanel.revalidate();
    }//GEN-LAST:event_deleteFieldBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new AdminFrame().setVisible(true);
            }
        });
    }
    
    public void centerScreen() {
         
         
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        setSize(screenWidth, screenHeight - 20);
        setLocation(0, 0);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JButton addFieldBTN;
    private javax.swing.JButton deleteFieldBTN;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton testBTN;
    private javax.swing.JButton updateFieldBTN;
    private javax.swing.JPanel workingPanel;
    // End of variables declaration//GEN-END:variables
    private Locale systemLocal = new Locale("ar");
    private ResourceBundle bundle;
}
