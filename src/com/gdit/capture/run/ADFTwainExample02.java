package com.gdit.capture.run;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/*
 * ADFTwainExample02.java
 *
 * Created on Sep 19, 2010, 5:39:55 AMtt
 */
import SK.gnome.morena.*;
import SK.gnome.twain.*;
import com.asprise.util.tiff.TIFFReader;

import com.asprise.util.tiff.TIFFWriter;
import com.gdit.capture.model.ImageTreeItem;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.Iterator;
import java.util.Locale;
import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import javax.swing.JLabel;
import javax.swing.SwingWorker;
import javax.swing.text.html.ImageView;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

public class ADFTwainExample02 extends javax.swing.JFrame {

    Runnable scanner;

    /**
     * Creates new form ADFTwainExample02
     */
    public ADFTwainExample02() {
        // initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void init() {
        jPanel1 = new javax.swing.JPanel();
        scanBTN = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imagesTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        imagePan = new ImagePan();
        imgViewer = new JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        scanBTN.setText("Scan...");
        scanBTN.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBTNActionPerformed(evt);
            }
        });

        jButton2.setText("Cancle");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(320, 320, 320).addComponent(scanBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(337, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(scanBTN).addComponent(jButton2)));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        imagesTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        imagesTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {

            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                imagesTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(imagesTree);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE).addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE).addContainerGap()));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("..."));
        jScrollPane2.setViewportView(imagePan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE))).addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGap(11, 11, 11)));

        pack();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scanBTN = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imagesTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        imgViewer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        scanBTN.setText("Scan...");
        scanBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBTNActionPerformed(evt);
            }
        });

        jButton2.setText("Cancle");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(scanBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(337, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(scanBTN)
                .addComponent(jButton2))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        imagesTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        imagesTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                imagesTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(imagesTree);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("..."));
        jScrollPane2.setViewportView(imgViewer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scanBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanBTNActionPerformed
        SwingWorker swingWorker = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {


                scan();
                return null;
            }

            @Override
            protected void done() {
                scanBTN.setText("Scan... ");
                scanBTN.setEnabled(true);
            }
        };
        swingWorker.execute();
    }//GEN-LAST:event_scanBTNActionPerformed

    private void imagesTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_imagesTreeValueChanged
        // customize to your object

        SwingWorker sw = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) imagesTree.getLastSelectedPathComponent();
                TIFFReader reader = new TIFFReader(new File("C:/test/" + selectedNode.getUserObject().toString() + ".tif"));
                //   imagePan.addImage(new ImageIcon("C:/test/" + selectedNode.getUserObject().toString() + ".jpg"));
                Image img = (Image) reader.getPage(0);
                imagePan.addImage(ImageGenerator.createBufferedImage(img));
                jScrollPane2.setViewportView(imagePan);
                System.out.println("C:/test/" + selectedNode.getUserObject().toString() + ".tif");
                return null;
            }
        };
        sw.execute();
    }//GEN-LAST:event_imagesTreeValueChanged

    private void preScan() {
    }

    public void scan() throws TwainException {
        try {
            TwainSource source = TwainManager.selectSource(null);
            System.err.println("Selected source is " + source);
            if (source != null) {
                source.setIndicators(false);
                source.setVisible(false);
                source.setAutoFeed(true);
                source.setSupportedSizes(TwainSource.TWSS_A4LETTER);
                source.setPixelType(TwainSource.TWPT_GRAY);
              //  source.setGrayScaleMode();
                source.setBitDepth(8);
                int count = 1;
                DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode) imagesTree.getModel().getRoot();
                DefaultTreeModel treeModel = (DefaultTreeModel) imagesTree.getModel();
                do {
                    scanBTN.setEnabled(false);
                    scanBTN.setText("Scanning... " + count);
                    MorenaImage image = new MorenaImage(source);
                    Image img = Toolkit.getDefaultToolkit().createImage(image);
                    BufferedImage bimg = ImageGenerator.createBufferedImage(img);

                    String path = "C:/test/" + count + ".tif";
                    com.sun.media.jai.codec.TIFFEncodeParam params = new com.sun.media.jai.codec.TIFFEncodeParam();
                    params.setCompression(com.sun.media.jai.codec.TIFFEncodeParam.COMPRESSION_DEFLATE);
                    params.setDeflateLevel(9);
                    FileOutputStream os = new FileOutputStream(path);
                   javax.media.jai.JAI.create("encode", bimg, os, "TIFF", params);
               // saveTiff(path, bimg);
                     TIFFWriter writer = new TIFFWriter();
//
                    ImageTreeItem item = new ImageTreeItem();
                    item.setName("page" + (count));
                    item.setPath("path");
                    imgViewer.setIcon(new ImageIcon(bimg));
                    imagePan.addImage(bimg);
                    jScrollPane2.setViewportView(imagePan);
                    DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(item.getName());
                    rootNode.add(leaf);
                    treeModel.insertNodeInto(leaf, rootNode, rootNode.getChildCount() - 1);
                    treeModel.reload();
                    imagesTree.setSelectionPath(getPath(leaf));
                    count++;
                } while (source.hasMoreImages());
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {

            TwainManager.close();
        }
    }

    private static ImageIcon scaleImage(Image img, int w, int h) {
        Image scaledImage = img.getScaledInstance(w, h, Image.SCALE_AREA_AVERAGING);
        ImageIcon icon = new ImageIcon(scaledImage);
        return icon;
    }

    // Returns a TreePath containing the specified node.
    public TreePath getPath(TreeNode node) {
        List list = new ArrayList();

        // Add all nodes to list
        while (node != null) {
            list.add(node);
            node = node.getParent();
        }
        Collections.reverse(list);

        // Convert array of nodes to TreePath
        return new TreePath(list.toArray());
    }

    	protected boolean saveTiff(String filename, BufferedImage image) {

		File tiffFile = new File(filename);
		ImageOutputStream ios = null;
		ImageWriter writer = null;

		try {

			// find an appropriate writer
			Iterator it = ImageIO.getImageWritersByFormatName("TIF");
			if (it.hasNext()) {
				writer = (ImageWriter)it.next();
			} else {
				return false;
			}

			// setup writer
			ios = ImageIO.createImageOutputStream(tiffFile);
			writer.setOutput(ios);
			ImageWriteParam writeParam = new ImageWriteParam(Locale.ENGLISH);
			writeParam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
			//  see writeParam.getCompressionTypes() for available compression type strings
			writeParam.setCompressionType("PackBits");

			// convert to an IIOImage
			IIOImage iioImage = new IIOImage(image, null, null);
			// write it!
			writer.write(null, iioImage, writeParam);

		} catch (IOException e) {
			e.printStackTrace();
			return false;
		}
		return true;

	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
               new ADFTwainExample02().setVisible(true);
                 	 
            }
        });
    }
    private ImagePan imagePan;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree imagesTree;
    private javax.swing.JLabel imgViewer;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton scanBTN;
    // End of variables declaration//GEN-END:variables
}
