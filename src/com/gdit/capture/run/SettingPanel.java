/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingPanel.java
 *
 * Created on 29/11/2010, 04:02:00 Ù…
 */
package com.gdit.capture.run;

import SK.gnome.capabilities.Capabilities;
import SK.gnome.capabilities.sane.SaneActivity;
import SK.gnome.capabilities.twain.TwainActivity;
import SK.gnome.morena.MorenaException;
import SK.gnome.morena.MorenaSource;
import SK.gnome.twain.TwainException;
import java.awt.Frame;
import java.io.FileInputStream;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author bahy
 */
public class SettingPanel extends JPanel {

    private TwainActivity twainActivity;
    static final String TWAIN_ = "TWAIN_";
    static final String SANE_ = "SANE_";
    static Properties properties;
    static String selectedSource = "";
    private SaneActivity saneActivity = null;
    protected Frame frame;
    protected CapSDialog dialogWindow;
    private String sourceName;
    private Capabilities capabilities;
    private Vector columns;

    /** Creates new form SettingPanel */
    public SettingPanel() {
        initComponents();
        init();
    }

    public void init() {
        try {
            Properties properties = new Properties();
            properties.load(new FileInputStream(System.getProperty("user.home") + "/.morena/" + "MorenaCapabilities.properties"));
            selectedSource = properties.getProperty("selectedSource", "");

              sourceName = null;
            if (selectedSource.startsWith(TWAIN_)) {
                sourceName = selectedSource.substring(TWAIN_.length());
                twainActivity = new TwainActivity(this, sourceName);
                twainActivity.showDialogWindow();
                //showDialogWindow();
            } else {
                JOptionPane.showMessageDialog(this, "No source selected. Expected source name:" + sourceName, "", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Exception during loading the properties file", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    public int showDialogWindow() throws MorenaException {
        boolean previousBadValueExceptionMask = true;
        boolean previousUnsupportedCapabilityException = true;
        try {
            // Beginning the version 6.4.0.4 Morena returns the previous value of these methods.
            // Replace next two lines with the following commented two lines in case of previous versions of Morena.
            previousBadValueExceptionMask = getSource().maskBadValueException(false);
            previousUnsupportedCapabilityException = getSource().maskUnsupportedCapabilityException(false);
        //getSource().maskBadValueException(false);
        //getSource().maskUnsupportedCapabilityException(false);
        } catch (TwainException e) {
            if (Capabilities.debug) {
                System.out.println("TwainActivity.showDialogWindow()" + e.getMessage() + " caused by " + e.getCause());
            }
        }
        frame = JOptionPane.getFrameForComponent(this);
        dialogWindow = new CapSDialog(frame, twainActivity);
        dialogWindow.setVisible(true);
        try {
            getSource().maskBadValueException(previousBadValueExceptionMask);
            getSource().maskUnsupportedCapabilityException(previousUnsupportedCapabilityException);
        } catch (TwainException e) {
            if (Capabilities.debug) {
                System.out.println("TwainActivity.showDialogWindow()" + e.getMessage() + " caused by " + e.getCause());
            }
        }

        return dialogWindow.getReturnValue();
    }



    public MorenaSource getSource() {
        if (null != twainActivity) {
            return twainActivity.getSource();
        } else if (null != saneActivity) {
            return saneActivity.getSource();
        } else {
            return null;
        }
    }

    public void close() {
        if (null != twainActivity) {
            twainActivity.close();
        } else if (null != saneActivity) {
            saneActivity.close();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String[] args) {
        new SettingPanel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
