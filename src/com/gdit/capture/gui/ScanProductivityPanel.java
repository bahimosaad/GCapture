/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ScanStatics.java
 *
 * Created on May 25, 2011, 4:47:27 PM
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.CaptureHome;
import com.gdit.capture.entity.Users;
import com.gdit.capture.entity.UsersHome;
import com.gdit.capture.model.DataTableModel;
import com.jidesoft.swing.JideSwingUtilities;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author bahi
 */
public class ScanProductivityPanel extends javax.swing.JPanel {

    private DataTableModel model;
    private ResourceBundle bundle;
    private Locale locale;

    /** Creates new form ScanStatics */
    public ScanProductivityPanel(ResourceBundle bundle,Locale locale) {
        this.bundle = bundle ;
        this.locale = locale;
        initComponents();
        init();
        changeScreenDirection(this, locale);
    }

    private void init() {
        CaptureHome dao = new CaptureHome();
        List<Object[]> data = dao.getScanProductivity(0,"0");
        model = new DataTableModel(data);
        dataTable.setModel(model);
        DefaultComboBoxModel usersModel = new DefaultComboBoxModel();
        UsersHome usersDao = new UsersHome();
        List<Users> users = usersDao.getAllUsers();
        usersModel.addElement("");
        for (Users user : users) {
            usersModel.addElement(user);
        }
        usersCombo.setModel(usersModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        usersCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMonth = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();

        jLabel1.setText("User");

        jLabel3.setText(" Date");

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel6.setText(bundle.getString("day")); // NOI18N

        txtDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDayLostFocus(evt);
            }
        });

        jLabel5.setText(bundle.getString("month")); // NOI18N

        txtMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthLostFocus(evt);
            }
        });

        jLabel4.setText(bundle.getString("year")); // NOI18N

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(dataTable);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDayLostFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDayLostFocus
        // TODO add your handling code here:
        String day = txtDay.getText();
        if (Integer.valueOf(day) > 0 & Integer.valueOf(day) <= 9) {
            txtDay.setText("0" + day);
        }
}//GEN-LAST:event_txtDayLostFocus

    private void txtMonthLostFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthLostFocus
        // TODO add your handling code here:
        String month = txtMonth.getText();
        if (Integer.valueOf(month) > 0 & Integer.valueOf(month) <= 9) {
            txtMonth.setText("0" + month);
        }
}//GEN-LAST:event_txtMonthLostFocus

    public static void main(String[] args) {
        JFrame frame = new JFrame();
        frame.setSize(600, 600);
         //  frame.getContentPane().add(new ScanProductivityPanel());
        frame.setVisible(true);
    }

    public static void changeScreenDirection(Component screen, Locale locale) {
        try {
            if (locale == null) {
                locale = new Locale("ar");
            }
            if (ComponentOrientation.getOrientation(locale).equals(ComponentOrientation.RIGHT_TO_LEFT)) {
                JideSwingUtilities.toggleRTLnLTR(screen);
                JideSwingUtilities.invalidateRecursively(screen);
                SwingUtilities.updateComponentTreeUI(screen);

            }
        } catch (Exception ex) {
             ex.printStackTrace();
        }
    }

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String date = "0";
        if(!txtDay.getText().trim().equals("")&& !txtMonth.getText().trim().equals("") && !txtYear.getText().trim().equals("")){
            date = txtDay.getText()+"/"+txtMonth.getText()+"/"+txtYear.getText();
        }
        if (usersCombo.getSelectedItem().equals("")) {
            CaptureHome dao = new CaptureHome();
            List<Object[]> data = dao.getScanProductivity(0, date);
            model = new DataTableModel(data);
            dataTable.setModel(model);
        } else {
            Users user = (Users) usersCombo.getSelectedItem();
            CaptureHome dao = new CaptureHome();
            List<Object[]> data = dao.getScanProductivity(user.getId(), date);
            model = new DataTableModel(data);
            dataTable.setModel(model);
        }

}//GEN-LAST:event_searchButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtYear;
    private javax.swing.JComboBox usersCombo;
    // End of variables declaration//GEN-END:variables
}
