/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ComputersDlg.java
 *
 * Created on 27/10/2010, 12:22:29 ุต
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.Computers;
import com.gdit.capture.entity.ComputersHome;
import com.gdit.capture.model.ButtonEditor;
import com.gdit.capture.model.ButtonRenderer;
import com.gdit.capture.model.ComputersTableModel;
import com.gdit.capture.model.MacAddress;
import com.jidesoft.swing.JideSwingUtilities;
//import com.sun.java.swing.plaf.nimbus.OptionPaneOptionPaneMessageAreaOptionPaneLabelPainter;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author hp
 */
public class ComputersDlg extends javax.swing.JDialog {

    /** Creates new form ComputersDlg */
    public ComputersDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        if (locale == null) {
            locale = new Locale("ar");
        }
        bundle = ResourceBundle.getBundle("com/gdit/bundle/capture");
        initComponents();
        init();
        changeScreenDirection(this, locale);
    }

    private void init() {
        try {
            ComputersHome computerssDao = new ComputersHome();
            computers = computerssDao.getAllComputers();
            computersModel = new ComputersTableModel(compTable, computers, bundle);
            compTable.setModel(computersModel);
            compTable.getColumn(bundle.getString("edit")).setCellRenderer(new ButtonRenderer());
            compTable.getColumn(bundle.getString("delete")).setCellRenderer(new ButtonRenderer());
            compTable.getColumn(bundle.getString("edit")).setCellEditor(new ButtonEditor(this, new JCheckBox(), bundle));
            compTable.getColumn(bundle.getString("delete")).setCellEditor(new ButtonEditor(this, new JCheckBox(), bundle));
        // txtComputerName.setText(System.getProperty("user.name"));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public static void changeScreenDirection(Component screen, Locale locale) {
        try {
            if (locale == null) {
                locale = new Locale("ar");

            }
            if (ComponentOrientation.getOrientation(locale).equals(ComponentOrientation.RIGHT_TO_LEFT)) {
                JideSwingUtilities.toggleRTLnLTR(screen);
                JideSwingUtilities.invalidateRecursively(screen);
                SwingUtilities.updateComponentTreeUI(screen);

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void clear() {
        txtComputerName.setText("");
        txtComputerIP.setText("");
        chkActive.setSelected(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtComputerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtComputerIP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chkActive = new javax.swing.JCheckBox();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        compTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel1.setText(bundle.getString("computer.name")); // NOI18N

        txtComputerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComputerNameActionPerformed(evt);
            }
        });
        txtComputerName.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                compNameVauleChange(evt);
            }
        });

        jLabel2.setText(bundle.getString("computer.ip")); // NOI18N

        jLabel3.setText(bundle.getString("active")); // NOI18N

        addBtn.setText(bundle.getString("add")); // NOI18N
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        compTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(compTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkActive)
                                .addGap(18, 18, 18)
                                .addComponent(addBtn)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtComputerIP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                    .addComponent(txtComputerName, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                                .addGap(42, 42, 42))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComputerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComputerIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(chkActive))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        try {
            // if (checkName(txtComputerIP.getText())) {
            InetAddress address = InetAddress.getByName(txtComputerName.getText());
            String ip = address.getHostAddress();
            txtComputerIP.setText(ip);
            MacAddress.getMacAddress(ip);
            Computers computer = new Computers();
            ComputersHome dao = new ComputersHome();
            computer.setName(txtComputerName.getText());
            computer.setIp(txtComputerIP.getText());
            computer.setActive(chkActive.isSelected());
            dao.persist(computer);
            dao.commit();
            ComputersHome.close();
            computersModel.addRow(computer);
            // users.add(user);
            clear();
//            }
//            else{
//                JOptionPane.showMessageDialog(this, "No Computer with this IP");
//            }
        } catch (UnknownHostException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("error.no.name"));
        }
        catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("save.error"));
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void txtComputerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComputerNameActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            InetAddress address = InetAddress.getByName(txtComputerName.getText());
            String ip = address.getHostAddress();
            txtComputerIP.setText(ip);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ComputersDlg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtComputerNameActionPerformed

    private void compNameVauleChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_compNameVauleChange
        try {
            // TODO add your handling code here:
            InetAddress address = InetAddress.getByName(txtComputerName.getText());
            String ip = address.getHostAddress();
            txtComputerIP.setText(ip);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ComputersDlg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_compNameVauleChange

    private boolean checkName(String host) {
        try {
            int timeout = 10000;
            if (InetAddress.getByName(host).isReachable(timeout)) {
                String name = InetAddress.getByName(host).getHostName();
                System.out.println(name + " is reachable");
                return true;
            } else {
                return false;
            }
        } catch (Exception ex) {
            Logger.getLogger(ComputersDlg.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ComputersDlg dialog = new ComputersDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private ResourceBundle bundle;
    private Locale locale;
    private Computers computer;
    private List<Computers> computers;
    private ComputersTableModel computersModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JCheckBox chkActive;
    private javax.swing.JTable compTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtComputerIP;
    private javax.swing.JTextField txtComputerName;
    // End of variables declaration//GEN-END:variables
}
