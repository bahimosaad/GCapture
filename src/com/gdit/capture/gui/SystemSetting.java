/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ScanSetting.java
 *
 * Created on 21/12/2010, 03:25:04 Ù…
 */
package com.gdit.capture.gui;

import SK.gnome.twain.TwainSource;
//import com.gdit.capture.service.SyncFiles;
//import com.gdit.capture.service.SyncFilesService;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.HashMap;
import java.util.Properties;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Bahi
 */
public class SystemSetting extends javax.swing.JPanel {

    private ResourceBundle bundle;

    /** Creates new form ScanSetting */
    public SystemSetting() {
        initComponents();
        bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture");
        showSetting();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chkBarcodeRead = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        chkBarcodePrint = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        chkDeleteSeperatorImage = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtServerIP = new javax.swing.JTextField();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel1.setText(bundle.getString("barcode.read")); // NOI18N

        jLabel2.setText(bundle.getString("barcode.print")); // NOI18N

        jLabel3.setText(bundle.getString("seperator.delete")); // NOI18N

        jButton1.setText(bundle.getString("save")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText(bundle.getString("server.ip")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(chkBarcodePrint)
                                .addComponent(chkBarcodeRead)
                                .addComponent(chkDeleteSeperatorImage)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkBarcodeRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkBarcodePrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkDeleteSeperatorImage))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(25, 25, 25)
                        .addComponent(jButton1))
                    .addComponent(txtServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            if (txtServerIP.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, bundle.getString("error.server.ip.required"));
                return;
            } else {
                try{
                     InetAddress address = InetAddress.getByName(txtServerIP.getText());

                }catch(UnknownHostException ex){
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this,bundle.getString("error.no.name"));
                    return;
                }
            }
            sysOptionsProperties = new java.util.Properties();
            sysOptionsProperties.setProperty("barcode.read", Boolean.valueOf(chkBarcodeRead.isSelected()).toString());
            sysOptionsProperties.setProperty("barcode.print", Boolean.valueOf(chkBarcodePrint.isSelected()).toString());
            sysOptionsProperties.setProperty("delete.seperator.page", Boolean.valueOf(chkDeleteSeperatorImage.isSelected()).toString());
            sysOptionsProperties.setProperty("server.ip", txtServerIP.getText());
            File file = new File("sysoptions.properties");

            FileOutputStream os = new FileOutputStream(file);
            sysOptionsProperties.store(os, "");
            os.flush();
            os.close();
      //      SyncFilesService service = new SyncFilesService();
      //      SyncFiles port = service.getSyncFilesPort();
      //      port.writeSystemOptions(getFinput("sysoptions.properties"));
            clear();

        } catch (Exception ex) {
            Logger.getLogger(ScannerSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showSetting() {
        try {
      //      SyncFilesService service = new SyncFilesService();
     //       SyncFiles port = service.getSyncFilesPort();
      //      byte[] bytes = port.sendFile("C:/capture/sysoptions.properties");
            File file = new File("sysoptions.properties");
            file.createNewFile();
            FileOutputStream out = new FileOutputStream(file);
       //     out.write(bytes);
            Properties scannerSetting = new Properties();
            scannerSetting.load(new FileInputStream("sysoptions.properties"));
            chkBarcodePrint.setSelected(Boolean.valueOf(scannerSetting.getProperty("barcode.print")));
            chkBarcodeRead.setSelected(Boolean.valueOf(scannerSetting.getProperty("barcode.read")));
            chkDeleteSeperatorImage.setSelected(Boolean.valueOf(scannerSetting.getProperty("delete.seperator.page")));
            txtServerIP.setText(scannerSetting.getProperty("server.ip"));


        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void clear(){
        chkBarcodePrint.setSelected(false);
        chkBarcodeRead.setSelected(false);
        chkDeleteSeperatorImage.setSelected(false);
        txtServerIP.setText("");
    }
    
    public static void main(String[] args) {
        JFrame frame = new JFrame();
        SystemSetting panel = new SystemSetting();
        frame.setSize(400, 400);
        frame.getContentPane().add(panel);
        frame.setVisible(true);
    }

    public JFrame getFrame() {
        return frame;
    }

    public void setFrame(JFrame frame) {
        this.frame = frame;
    }

    private byte[] getFinput(String path) {

        File file = new File(path);

        try {
            FileInputStream fin = new FileInputStream(file);
            byte fileContent[] = new byte[(int) file.length()];
            fin.read(fileContent);
            return fileContent;
        } catch (FileNotFoundException e) {
            System.out.println("File not found" + e);
            return null;
        } catch (IOException ioe) {
            System.out.println("Exception while reading the file " + ioe);
            return null;
        }
    }
    private Properties sysOptionsProperties;
    private JFrame frame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkBarcodePrint;
    private javax.swing.JCheckBox chkBarcodeRead;
    private javax.swing.JCheckBox chkDeleteSeperatorImage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtServerIP;
    // End of variables declaration//GEN-END:variables
}
