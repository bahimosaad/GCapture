/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NorthPanel.java
 *
 * Created on 01/05/2011, 01:43:18 م
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.Scanner;
import com.gdit.capture.entity.ScannerHome;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 *
 * @author Bahi
 */
public class NorthPanel extends javax.swing.JPanel {

    /** Creates new form NorthPanel */
    public NorthPanel() {
        initComponents();
        readScannerSettings();

    }

    public void readScannerSettings() {
        try {
//            Properties scannerSetting = new Properties();
//            scannerSetting.load(new FileInputStream("C:/.capture/scanner.properties"));
            ScannerHome scanHome = new ScannerHome();
            List<Scanner> scanners = scanHome.getAllCaps();
            Map<String, String> capMap = new HashMap<String, String>();
            for (Scanner cap : scanners) {
                capMap.put(cap.getCapName(), cap.getCapValue());
            }
            
            chkAdf.setSelected(Boolean.valueOf(capMap.get("AutoFeed")));
            chkDuplex.setSelected(Boolean.valueOf(capMap.get("DuplexEnabled")));
            if (capMap.get("PixelType").equals("BW")) {
                radioBW.setSelected(true);
            } else if (capMap.get("PixelType").equals("GRAY")) {
                radioRGB.setSelected(true);
            }
            if (capMap.get("SupportedSizes").equals("A4LETTER")) {
                cboSize.setSelectedItem("A4");
            } else if (capMap.get("SupportedSizes").equals("A3")) {
                cboSize.setSelectedItem("A3");
            }else if(capMap.get("SupportedSizes").equals("Auto")){
                cboSize.setSelectedItem("Auto");
            }
            txtDpi.setText(capMap.get("XResolution"));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        chkAdf = new javax.swing.JCheckBox();
        radioBW = new javax.swing.JRadioButton();
        radioRGB = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        txtDpi = new javax.swing.JTextField();
        cboSize = new javax.swing.JComboBox();
        chkDuplex = new javax.swing.JCheckBox();

        chkAdf.setText("مسح تلقائي");

        radioBW.setText("اسود");
        radioBW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBWActionPerformed(evt);
            }
        });

        radioRGB.setText("رمادي");
        radioRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRGBActionPerformed(evt);
            }
        });

        jLabel2.setText("DPI");

        cboSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Auto", "A4", "A3" }));

        chkDuplex.setText("وجهين");
        chkDuplex.setActionCommand(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkDuplex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkAdf)
                .addGap(18, 18, 18)
                .addComponent(radioBW)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioRGB)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDpi, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAdf)
                    .addComponent(radioBW)
                    .addComponent(radioRGB)
                    .addComponent(jLabel2)
                    .addComponent(txtDpi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDuplex)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioBWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBWActionPerformed
        // TODO add your handling code here:
        if (radioBW.isSelected()) {
            radioRGB.setSelected(false);
            txtDpi.setText("300");
        }
    }//GEN-LAST:event_radioBWActionPerformed

    private void radioRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRGBActionPerformed
        // TODO add your handling code here:
        if (radioRGB.isSelected()) {
            radioBW.setSelected(false);
            txtDpi.setText("150");
        }
    }//GEN-LAST:event_radioRGBActionPerformed

    public JComboBox getCboSize() {
        return cboSize;
    }

    public void setCboSize(JComboBox cboSize) {
        this.cboSize = cboSize;
    }

    public JCheckBox getChkDuplex() {
        return chkDuplex;
    }

    public void setChkDuplex(JCheckBox chkDuplex) {
        this.chkDuplex = chkDuplex;
    }

    

    public JCheckBox getChkAdf() {
        return chkAdf;
    }

    public void setChkAdf(JCheckBox chkAdf) {
        this.chkAdf = chkAdf;
    }

    public JRadioButton getRadioBW() {
        return radioBW;
    }

    public void setRadioBW(JRadioButton radioBW) {
        this.radioBW = radioBW;
    }

    public JRadioButton getRadioRGB() {
        return radioRGB;
    }

    public void setRadioRGB(JRadioButton radioRGB) {
        this.radioRGB = radioRGB;
    }

    public JTextField getTxtDpi() {
        return txtDpi;
    }

    public void setTxtDpi(JTextField txtDpi) {
        this.txtDpi = txtDpi;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cboSize;
    private javax.swing.JCheckBox chkAdf;
    private javax.swing.JCheckBox chkDuplex;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton radioBW;
    private javax.swing.JRadioButton radioRGB;
    private javax.swing.JTextField txtDpi;
    // End of variables declaration//GEN-END:variables
}
