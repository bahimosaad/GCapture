/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RolesFrame.java
 *
 * Created on 20/09/2010, 09:57:13 Ù…
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.Modules;
import com.gdit.capture.entity.ModulesHome;
import com.gdit.capture.entity.Roles;
import com.gdit.capture.entity.RolesHome;
import com.gdit.capture.model.ButtonEditor;
import com.gdit.capture.model.ButtonRenderer;
import com.gdit.capture.model.ModuleTableModel;
import com.gdit.capture.model.role.RoleTableModel;
import com.jidesoft.swing.JideSwingUtilities;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author bahy
 */
public class ModulesPanel extends javax.swing.JPanel {

    private static final Logger log = Logger.getAnonymousLogger();
    private ModuleTableModel modulesModel;
    private List<Modules> modules;

    /** Creates new form RolesFrame */
    public ModulesPanel() {
      //  super(parent, modal);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        if (locale == null) {
            locale = new Locale("ar");
        }
        bundle = ResourceBundle.getBundle("com/gdit/bundle/capture", locale);
        initComponents();
        init();
        changeScreenDirection(this, locale);
    }

    private void init() {
        try {
            ModulesHome modulesDao = new ModulesHome();
            modules = modulesDao.getAllModules();
            modulesModel = new ModuleTableModel(modulesTable, modules, bundle);
            modulesTable.setModel(modulesModel);
            modulesTable.getColumn(bundle.getString("edit")).setCellRenderer(new ButtonRenderer());
            modulesTable.getColumn(bundle.getString("delete")).setCellRenderer(new ButtonRenderer());
            modulesTable.getColumn(bundle.getString("edit")).setCellEditor(new ButtonEditor(new JCheckBox(), bundle));
            modulesTable.getColumn(bundle.getString("delete")).setCellEditor(new ButtonEditor(new JCheckBox(), bundle));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        modulesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

      //  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel1.setText(bundle.getString("module.name")); // NOI18N

        addBtn.setText(bundle.getString("add")); // NOI18N
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        modulesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(modulesTable);

        jLabel2.setText(bundle.getString("modules")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addGap(299, 299, 299))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

     //   pack();
    }// </editor-fold>

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try {
            if(txtName.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, bundle.getString("error.module.name.required"));
                return;
            }
            Modules module = new Modules();
            ModulesHome dao = new ModulesHome();
            module.setName(txtName.getText());
            dao.persist(module);
            dao.commit();
            ModulesHome.close();
            modulesModel.addRow(module);
            clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            RolesHome.close();
        }
}

    /**
     * @param args the command line arguments
     */
 

    public static void changeScreenDirection(Component screen, Locale locale) {
        try {
            if (locale == null) {
                locale = new Locale("ar");
            }
            if (ComponentOrientation.getOrientation(locale).equals(ComponentOrientation.RIGHT_TO_LEFT)) {
                JideSwingUtilities.toggleRTLnLTR(screen);
                JideSwingUtilities.invalidateRecursively(screen);
                SwingUtilities.updateComponentTreeUI(screen);
            }
        } catch (Exception ex) {
            log.log(Level.SEVERE, "", ex);
        }
    }

    public void clear() {
        txtName.setText("");
    }

    private void centerScreen() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height / 2;
        int screenWidth = screenSize.width / 2;
        //setSize(screenWidth, screenHeight - 20);
        setLocation(screenWidth - this.getWidth() / 2, screenHeight - this.getHeight() / 2);
    }

    public JFrame getFrame() {
        return frame;
    }

    public void setFrame(JFrame frame) {
        this.frame = frame;
    }



    private JFrame frame;
    private ResourceBundle bundle;
    private Locale locale;

    // Variables declaration - do not modify
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable modulesTable;
    private javax.swing.JTextField txtName;
    // End of variables declaration
}
