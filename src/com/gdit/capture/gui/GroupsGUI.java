/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.Groups;
import com.gdit.capture.entity.GroupsHome;
import com.gdit.capture.entity.Roles;
import com.gdit.capture.entity.RolesGroups;
import com.gdit.capture.entity.RolesHome;
import com.gdit.capture.model.ButtonEditor;
import com.gdit.capture.model.ButtonRenderer;
import com.gdit.capture.model.GroupTableModel;
import com.jidesoft.swing.JideSwingUtilities;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author bahy
 */
public class GroupsGUI extends javax.swing.JPanel {

    /** Creates new form GroupsGUI */
    public GroupsGUI(java.awt.Frame parent, boolean modal) {
       
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        if (locale == null) {
            locale = new Locale("ar");
        }
        bundle = ResourceBundle.getBundle("com/gdit/bundle/capture", locale);
        initComponents();
        init();
        changeScreenDirection(this, locale);
    }

    public GroupsGUI() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        if (locale == null) {
            locale = new Locale("ar");
        }
        bundle = ResourceBundle.getBundle("com/gdit/bundle/capture", locale);
        initComponents();
        init();
        changeScreenDirection(this, locale);
    }

    private void init() {
        try {
//            RolesHome rolesDao = new RolesHome();
//            chkList = new ArrayList<JCheckBox>();
//            roles = rolesDao.getAllRoles();
//            for (Roles role : roles) {
//                chkList.add(new JCheckBox(role.getRoleName()));
//            }
//            rolesChkList.setListData(chkList.toArray());
            GroupsHome groupsDao = new GroupsHome();
            groups = groupsDao.getAllGroups();
            groupsModel = new GroupTableModel(grousTable, groups, bundle);
            grousTable.setModel(groupsModel);
            grousTable.getColumn(bundle.getString("edit")).setCellRenderer(new ButtonRenderer());
            grousTable.getColumn(bundle.getString("delete")).setCellRenderer(new ButtonRenderer());
            grousTable.getColumn(bundle.getString("edit")).setCellEditor(new ButtonEditor(this, new JCheckBox(), bundle));
            grousTable.getColumn(bundle.getString("delete")).setCellEditor(new ButtonEditor(this, new JCheckBox(), bundle));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

//    public void showGroup(Groups groups) {
//        this.currentGroup = groups;
//        txtGroupName.setText(groups.getGroupName());
//        addBtn.setText(bundle.getString("edit"));
//        Set<RolesGroups> rgs = groups.getRolesGroupses();
//        RolesHome rolesDao = new RolesHome();
//         clearAllChkBoxes();
//        for (RolesGroups rg : rgs) {
//            Roles role = (Roles) rolesDao.findByName(rg.getRoles().getRoleName());
//            JCheckBox ckBox = new JCheckBox(rg.getRoles().getRoleName());
//            ckBox.setSelected(true);
//            int index = roles.indexOf(role);
//            ckBox.setSelected(true);
//            chkList.set(index, ckBox);
//            rolesChkList.setListData(chkList.toArray());
//            pack();
//        }
//    }

//    private void clearAllChkBoxes() {
//        for (JCheckBox ckBox : chkList) {
//            ckBox.setSelected(false);
//        }
//        rolesChkList.setListData(chkList.toArray());
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtGroupName = new javax.swing.JTextField();
//        jScrollPane1 = new javax.swing.JScrollPane();
        rolesChkList = new CheckBoxList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grousTable = new javax.swing.JTable();
        addBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

      //  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel1.setText(bundle.getString("group.name")); // NOI18N

        //  jScrollPane1.setViewportView(rolesChkList);

//        jLabel2.setText(bundle.getString("")); // NOI18N


        jScrollPane2.setViewportView(grousTable);

        addBtn.setText(bundle.getString("add")); // NOI18N

        jLabel3.setText(bundle.getString("groups"));

        addBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                addBtnActionPerformed(e);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);

         this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().
                addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).
                addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE).
                addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).
                addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).
                addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)).
                addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).
                addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(txtGroupName, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))).
                addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(addBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap(15, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(22, 22, 22).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(addBtn).addGap(13, 13, 13).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE).addGap(29, 29, 29)));

      //  pack();
    }// </editor-fold>

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try {
            if(txtGroupName.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, bundle.getString("error.group.name.required"));
                return;
            }
            Groups group = new Groups();
            GroupsHome dao = new GroupsHome();
            group.setGroupName(txtGroupName.getText());
            dao.persist(group);
            dao.commit();
            groupsModel.addRow(group);
            clear();

        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            GroupsHome.close();
            clear();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GroupsGUI dialog = new GroupsGUI(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
                dialog.setVisible(true);
            }
        });
    }

    public static void changeScreenDirection(Component screen, Locale locale) {
        try {
            if (locale == null) {
                locale = new Locale("ar");
            }
            if (ComponentOrientation.getOrientation(locale).equals(ComponentOrientation.RIGHT_TO_LEFT)) {
                JideSwingUtilities.toggleRTLnLTR(screen);
                JideSwingUtilities.invalidateRecursively(screen);
                SwingUtilities.updateComponentTreeUI(screen);
            }
        } catch (Exception ex) {
            log.log(Level.SEVERE, "", ex);
        }
    }

    public void clear() {
        txtGroupName.setText("");
        //  clearAllChkBoxes();
        addBtn.setText(bundle.getString("add"));
    }

    private void centerScreen() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height / 2;
        int screenWidth = screenSize.width / 2;
        //setSize(screenWidth, screenHeight - 20);
        setLocation(screenWidth - this.getWidth() / 2, screenHeight - this.getHeight() / 2);
    }


    public JFrame getFrame() {
        return frame;
    }

    public void setFrame(JFrame parent) {
        this.frame = parent;
    }
    //   private List<JCheckBox> chkList;
    //   private List<Roles> roles;



    private List<Groups> groups;
    private JFrame frame;
    private Groups currentGroup;
    private GroupTableModel groupsModel;
    private ResourceBundle bundle;
    private Locale locale;
    private static final Logger log = Logger.getAnonymousLogger();
    // Variables declaration - do not modify
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable grousTable;
    private CheckBoxList rolesChkList;
    private javax.swing.JTextField txtGroupName;
    // End of variables declaration
}
