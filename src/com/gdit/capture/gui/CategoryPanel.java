/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CategoryPanel.java
 *
 * Created on 04/01/2011, 06:39:51 Ù…
 */
package com.gdit.capture.gui;

import com.gdit.capture.entity.Category;
import com.gdit.capture.entity.CategoryHome;
import com.gdit.capture.entity.Rep;
import com.gdit.capture.entity.RepHome;
import com.gdit.capture.model.category.CategoryButtonEditor;
import com.gdit.capture.model.category.CategoryButtonRenderer;
import com.gdit.capture.model.category.CategoryTableModel;
import com.jidesoft.swing.JideSwingUtilities;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Bahi
 */
public class CategoryPanel extends javax.swing.JPanel {

    private Category category;
    private List<Category> categories;
    private List<Rep> reps;
    private CategoryTableModel model;
    private ResourceBundle bundle;
    private DefaultComboBoxModel repComboModel;
    private JFrame frame;
    private Locale locale;

    /** Creates new form CategoryPanel */
    public CategoryPanel(Locale locale,ResourceBundle bundle) {
        this.bundle = bundle;
        this.locale = locale;
        initComponents();
        init();
    }

    private void init() {
        try {
            editBtn.setEnabled(false);
            bundle = ResourceBundle.getBundle("com/gdit/bundle/capture");
            CategoryHome catDao = new CategoryHome();
            categories = catDao.getAllCategory();
            model = new CategoryTableModel(categoriesTable, categories, bundle);
            RepHome repDao = new RepHome();
            reps = repDao.getAllRep();
            repComboModel = new DefaultComboBoxModel();
            repComboModel.addElement("");
            for (Rep rep : reps) {
                repComboModel.addElement(rep);
            }
            repsCombo.setModel(repComboModel);
            categoriesTable.setModel(model);
            categoriesTable.getColumn(bundle.getString("edit")).setCellRenderer(new CategoryButtonRenderer());
            categoriesTable.getColumn(bundle.getString("delete")).setCellRenderer(new CategoryButtonRenderer());
            categoriesTable.getColumn(bundle.getString("edit")).setCellEditor(new CategoryButtonEditor(this, new JCheckBox(), bundle));
            categoriesTable.getColumn(bundle.getString("delete")).setCellEditor(new CategoryButtonEditor(this, new JCheckBox(), bundle));
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            CategoryHome.close();
            RepHome.close();
        }
    }

    public void clear() {
        txtName.setText("");
        repsCombo.setSelectedItem("");
        chkDefault.setSelected(false);
        chkFolder.setSelected(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        repsCombo = new javax.swing.JComboBox();
        saveBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoriesTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        chkDefault = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        chkFolder = new javax.swing.JCheckBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/gdit/bundle/capture"); // NOI18N
        jLabel1.setText(bundle.getString("category.name")); // NOI18N

        jLabel2.setText(bundle.getString("rep")); // NOI18N

        saveBtn.setText(bundle.getString("add")); // NOI18N
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        editBtn.setText(bundle.getString("save")); // NOI18N
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        categoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(categoriesTable);

        jLabel3.setText(bundle.getString("categories")); // NOI18N

        jLabel4.setText("Default");

        jLabel5.setText("Create Folder");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkFolder)
                            .addComponent(chkDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(repsCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(repsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(chkDefault))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(chkFolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveBtn)
                        .addComponent(editBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        try {
            if(txtName.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, bundle.getString("error.category.name.required"));
                return;
            }
            category = new Category();
            CategoryHome dao = new CategoryHome();
            category.setName(txtName.getText());
            category.setDflt(chkDefault.isSelected());
            category.setCreateFolder(chkFolder.isSelected());
            if (!repsCombo.getSelectedItem().equals("")) {
                category.setRep((Rep) repsCombo.getSelectedItem());
            }
            if(chkDefault.isSelected())
                dao.clearDefaults(category.getRep());
            dao.persist(category);
            dao.commit();
            model.addRow(category);
            clear();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("save.error"));
        } finally {
            CategoryHome.close();

        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        try {
            if(txtName.getText().trim().equals("")){
                JOptionPane.showMessageDialog(this, bundle.getString("error.category.name.required"));
                return;
            }
            CategoryHome dao = new CategoryHome();          
            category.setName(txtName.getText());
            category.setDflt(chkDefault.isSelected());
            category.setCreateFolder(chkFolder.isSelected());
            if (!repsCombo.getSelectedItem().equals("")) {
                category.setRep((Rep) repsCombo.getSelectedItem());
            }
            if(chkDefault.isSelected())
                dao.clearDefaults(category.getRep());
            dao.attachDirty(category);
            dao.commit();
            categories.set(categories.indexOf(category), category);
            model.setCategories(categories);
            clear();
            editBtn.setEnabled(false);
            saveBtn.setEnabled(true);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("save.error"));
        } finally {
            CategoryHome.close();
        }
    }//GEN-LAST:event_editBtnActionPerformed

    public void edit(Category category) {
        this.category = category;
        CategoryHome dao = new CategoryHome();
         category = dao.findById(category.getId());
        txtName.setText(category.getName());
        chkDefault.setSelected(category.getDflt());
        chkFolder.setSelected(category.isCreateFolder());
        if (category.getRep() != null) {
            repsCombo.setSelectedItem(category.getRep());
        }
        CategoryHome.close();
        editBtn.setEnabled(true);
        saveBtn.setEnabled(false);
    }

    public static void main(String[] args) {
//        JFrame frame = new JFrame();
//        frame.setSize(500, 500);
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        frame.getContentPane().add(new CategoryPanel());
//        frame.setVisible(true);
    }

    public static void changeScreenDirection(Component screen, Locale locale) {
        try {
            if (locale == null) {
                locale = new Locale("ar");
            }
            if (ComponentOrientation.getOrientation(locale).equals(ComponentOrientation.RIGHT_TO_LEFT)) {
                JideSwingUtilities.toggleRTLnLTR(screen);
                JideSwingUtilities.invalidateRecursively(screen);
                SwingUtilities.updateComponentTreeUI(screen);
            }
        } catch (Exception ex) {
           ex.printStackTrace();
        }
    }

     private void centerScreen() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height / 2;
        int screenWidth = screenSize.width / 2;
        //setSize(screenWidth, screenHeight - 20);
        setLocation(screenWidth - this.getWidth() / 2, screenHeight - this.getHeight() / 2);
    }

    public JFrame getFrame() {
        return frame;
    }

    public void setFrame(JFrame frame) {
        this.frame = frame;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable categoriesTable;
    private javax.swing.JCheckBox chkDefault;
    private javax.swing.JCheckBox chkFolder;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox repsCombo;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
